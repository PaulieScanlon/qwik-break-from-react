(()=>{const n=Number.MAX_SAFE_INTEGER>>>1;function e(e,o){const[i,s]=c(o),a=e.t.find((n=>i===n.o));if(a)return e.i("intercepting",o.pathname),t(e,a,[s],n).then((()=>async function(n,e){const t=n.u.find((n=>n.$.pathname===e.pathname));return t?t.l:(n.i("CACHE HIT",e.pathname),n.p.match(e))}(e,o)))}async function t(e,t,i,c){const a=new Set;i.forEach((n=>s(t.h,a,n))),await Promise.all(Array.from(a).map((o=>async function(e,t,o){let i=e.u.find((n=>n.$.pathname===t.pathname));const s=o>=n?"direct":"prefetch";if(i){const n=i.m?"fetching":"waiting";i.C<o?(e.i("queue update priority",n,t.pathname),i.C=o):e.i("already in queue",s,n,t.pathname)}else await e.p.match(t)||(e.i("enqueue",s,t.pathname),i={C:o,$:t,R:null,l:null,m:!1},i.l=new Promise((n=>i.R=n)),e.u.push(i));return i}(e,new URL(t.o+o,e.$),c)))),o(e)}function o(e){e.u.sort(i);let t=0;for(const i of e.u)if(i.m)t++;else if(t<e.H||i.C>=n){i.m=!0,t++;const s=i.C>=n?"FETCH (CACHE MISS)":"FETCH";e.i(s,i.$.pathname),e.S(i.$).then((async n=>{200===n.status&&(e.i("CACHED",i.$.pathname),await e.p.put(i.$,n.clone())),i.R(n)})).finally((()=>{e.i("FETCH DONE",i.$.pathname),e.u.splice(e.u.indexOf(i),1),o(e)}))}}function i(n,e){return e.C-n.C}function s(n,e,t){if(!e.has(t)){e.add(t);let o=n.findIndex((n=>n===t));if(-1!==o)for(;"number"==typeof n[++o];)s(n,e,n[n[o]])}return e}function c(n){const e=new URL(n).pathname,t=e.lastIndexOf("/");return[e.substring(0,t+1),e.substring(t+1)]}const a=(...n)=>{console.log("⚙️ Prefetch SW:",...n)};async function r(n,e,t,o){const i=n.t.findIndex((n=>n==n));if(-1!==i&&n.t.splice(i,1),n.i("adding base:",e),n.t.push({o:e,h:t}),o){const o=new Set(t.filter((n=>"string"==typeof n)));for(const t of await n.p.keys()){const[i,s]=c(new URL(t.url)),a=[];i!==e||o.has(s)||(n.i("deleting",t.url),a.push(n.p.delete(t))),await Promise.all(a)}}}function u(n,e,o){const i=n.t.find((n=>e===n.o));i?t(n,i,o,0):console.error(`Base path not found: ${e}, ignoring prefetch.`)}function f(n){if(!n.U&&n.L.length){const t=n.L.shift();n.U=(async(n,t)=>{const o=t[0];n.i("received message:",o,t[1],t.slice(2)),"graph"===o?await r(n,t[1],t.slice(2),!0):"graph-url"===o?await async function(n,t,o){await r(n,t,[],!1);const i=await e(n,new URL(t+o,n.$));if(i&&200===i.status){const e=await i.json();e.push(o),await r(n,t,e,!0)}}(n,t[1],t[2]):"prefetch"===o?await u(n,t[1],t.slice(2)):"prefetch-all"===o?await function(n,e){const t=n.t.find((n=>e===n.o));t?u(n,e,t.h.filter((n=>"string"==typeof n))):console.error(`Base path not found: ${e}, ignoring prefetch.`)}(n,t[1]):"ping"===o?a("ping"):"verbose"===o?(n.i=a)("mode: verbose"):console.error("UNKNOWN MESSAGE:",t)})(n,t).then((()=>{n.U=null,f(n)}))}}(n=>{const t={S:n.fetch.bind(n),u:[],t:[],p:null,L:[],U:null,H:10,$:new URL(n.location.href),i:()=>{}};n.addEventListener("fetch",(async n=>{const o=n.request;if("GET"===o.method){const i=e(t,new URL(o.url));i&&n.respondWith(i)}})),n.addEventListener("message",(n=>{t.L.push(n.data),f(t)})),n.addEventListener("install",(()=>n.skipWaiting())),n.addEventListener("activate",(async e=>{e.waitUntil(n.clients.claim()),t.p=await n.caches.open("QwikBundles")}))})(globalThis)})();